/*===================================================
  CSS Grid Helpers
===================================================== */

@mixin grid-columns-and-rows-count($screenSize: null) {
    @for $columns from 1 through $css-grid-max-columns {
        .grid#{$screenSize}-columns-#{$columns} {
            grid-template-columns: repeat($columns, 1fr);
        }
    }

    @for $rows from 1 through $css-grid-max-rows {
        .grid#{$screenSize}-rows-#{$rows} {
            grid-template-rows: repeat($rows, 1fr);
        }
    }
}

@mixin grid-columns-and-rows-gaps($screenSize: null) {

    @each $index, $gap in $css-grid-columns-gaps {
        .grid#{$screenSize}-columns-gap-#{$index} {
            grid-column-gap: $gap;
        }
    }

    @each $index, $gap in $css-grid-rows-gaps {
        .grid#{$screenSize}-rows-gap-#{$index} {
            grid-row-gap: $gap;
        }
    }
}

.d-grid {
    display: grid;
    justify-content: stretch;
    justify-items: stretch;
    align-items: flex-start;
}

.grid-items-align-top {
    align-items: flex-start !important;
}

.grid-items-align-middle {
    align-items: center !important;
}

.grid-items-align-bottom {
    align-items: flex-end !important;
}

@include grid-columns-and-rows-count();

@include grid-columns-and-rows-gaps();

@each $prefix, $width in $grid-breakpoints {

    @media (min-width: $width) {

        @include grid-columns-and-rows-count(-#{$prefix});

        @include grid-columns-and-rows-gaps(-#{$prefix});

    }

}